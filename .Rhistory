# group_by(Team) %>%
# arrange(Team, year) %>%
# mutate(wc = sum(counter[group != "Not Present"]),
# win = sum(counter[group == "Win"]))
# arrange(geo, -wc, -win, Team)
# ungroup()
df_pos <- df_plot |>
distinct(Team) |>
mutate(y_pos = row_number())
datatable(df_pos, filter = "top")
df_plot <- df_plot |>
left_join(df_pos, by = "Team")
datatable(df_plot, filter = "top")
df_plot$y_pos <- ifelse(df_plot$y_pos < 16, df_plot$y_pos, df_plot$y_pos + 1)
df_plot$y_pos <- ifelse(df_plot$y_pos < 26, df_plot$y_pos, df_plot$y_pos + 1)
df_plot$group <- factor(df_plot$group,
levels = c("Not Present", "Group Stage", "Round of 16", "Quarter Finals", "Semi Finals", "Win"))
pal <- viridis(n = 5, option = "viridis")[1:5]
df_plot$host[df_plot$Team == "Japan" & df_plot$year == 2002] <- "Japan"
plot <- ggplot(data = df_plot, mapping = aes(x = as.character(year), y = y_pos, fill = group)) +
geom_tile(color = "white", width = 0.9, height = 0.9) +
geom_point(inherit.aes = FALSE,
data = df_plot %>% filter(Team == host),
mapping = aes(x = as.character(year), y = y_pos),
shape = 21, fill = "white", color = "grey20", size = 3) +
annotate(geom = "text", x = "2006", y = -0.5, label = "Hosted", family = "Roboto", size = 2.75) +
geom_segment(mapping = aes(x = "2006", xend = "2006", y = -0.1, yend = 0.85),
linewidth = 0.1, arrow = arrow(length = unit(0.05, "in"))) +
geom_text(mapping = aes(label = Team, y = y_pos, x = -5), size = 3, hjust = 0, color = "#909090", family = "Roboto") +
geomtextpath::geom_textsegment(mapping = aes(label = "Europe", x = -6, xend = -6, y = 15, yend = 1), family = "Roboto", fontface = "bold") +
geomtextpath::geom_textsegment(mapping = aes(label = "Americas", x = -6, xend = -6, y = 25, yend = 17), family = "Roboto", fontface = "bold") +
geomtextpath::geom_textsegment(mapping = aes(label = "Other", x = -6, xend = -6, y = 36, yend = 27), family = "Roboto", fontface = "bold") +
scale_x_discrete(breaks = as.character(unique(df_plot$year)),
expand = expansion(mult = c(1.5, 0.1), add = c(1, 1))) +
scale_y_reverse(breaks = seq(0, 36, by = 1), limits = c(37.2, -2), expand = c(0, 0)) +
scale_fill_manual(values = c("grey90", pal),
guide = guide_legend(ncol = 1, override.aes = list(width = 0.6, height = 0.6))) +
coord_equal() +
labs(x = "", y = "", fill = "Top Achievement") +
theme_void() +
theme(text = element_text(family = "Roboto"),
plot.title = element_text(face = "bold"),
legend.position = "none",
legend.title = element_text(size = 8),
legend.text = element_text(size = 6),
axis.text.y = element_blank(),
axis.text.x = element_text(size = 8, angle = 90, family = "Roboto"),
axis.ticks = element_blank(),
panel.background = element_blank())
plot
# ggplot(data = df_plot, mapping = aes(x = as.character(year), y = y_pos, fill = group))
# geom_tile(color = "white", width = 0.9, height = 0.9)
# geom_point(inherit.aes = FALSE,
# data = df_plot %>% filter(Team == host),
# mapping = aes(x = as.character(year), y = y_pos),
# shape = 21, fill = "white", color = "grey20", size = 3)
# annotate(geom = "text", x = "2006", y = -0.5, label = "Hosted", family = "Roboto", size = 2.75)
# geom_segment(mapping = aes(x = "2006", xend = "2006", y = -0.1, yend = 0.85),
#linewidth = 0.1, arrow = arrow(length = unit(0.05, "in")))
ggplot(data = df_plot, mapping = aes(x = as.character(year), y = y_pos, fill = group)) +
geom_tile(color = "white", width = 0.9, height = 0.9) +
geom_point(inherit.aes = FALSE,
data = df_plot %>% filter(Team == host),
mapping = aes(x = as.character(year), y = y_pos),
shape = 21, fill = "white", color = "grey20", size = 3) +
annotate(geom = "text", x = "2006", y = -0.5, label = "Hosted", family = "Roboto", size = 2.75) +
geom_segment(mapping = aes(x = "2006", xend = "2006", y = -0.1, yend = 0.85),
linewidth = 0.1, arrow = arrow(length = unit(0.05, "in"))) +
geom_text(mapping = aes(label = Team, y = y_pos, x = -5), size = 3, hjust = 0, color = "#909090", family = "Roboto")
ggplot(data = df_plot, mapping = aes(x = as.character(year), y = y_pos, fill = group)) +
geom_tile(color = "white", width = 0.9, height = 0.9) +
geom_point(inherit.aes = FALSE,
data = df_plot %>% filter(Team == host),
mapping = aes(x = as.character(year), y = y_pos),
shape = 21, fill = "white", color = "grey20", size = 3) +
annotate(geom = "text", x = "2006", y = -0.5, label = "Hosted", family = "Roboto", size = 2.75) +
geom_segment(mapping = aes(x = "2006", xend = "2006", y = -0.1, yend = 0.85),
linewidth = 0.1, arrow = arrow(length = unit(0.05, "in")))
ggplot(data = df_plot, mapping = aes(x = as.character(year), y = y_pos, fill = group)) +
geom_tile(color = "white", width = 0.9, height = 0.9) +
geom_point(inherit.aes = FALSE,
data = df_plot %>% filter(Team == host),
mapping = aes(x = as.character(year), y = y_pos),
shape = 21, fill = "white", color = "grey20", size = 3) +
annotate(geom = "text", x = "2006", y = -0.5, label = "Hosted", family = "Roboto", size = 2.75) +
geom_segment(mapping = aes(x = "2006", xend = "2006", y = -0.1, yend = 0.85),
linewidth = 0.1, arrow = arrow(length = unit(0.05, "in"))) +
geom_text(mapping = aes(label = Team, y = y_pos, x = -5), size = 3, hjust = 0, color = "#909090", family = "Roboto") +
geomtextpath::geom_textsegment(mapping = aes(label = "Europe", x = -6, xend = -6, y = 15, yend = 1), family = "Roboto", fontface = "bold") +
geomtextpath::geom_textsegment(mapping = aes(label = "Americas", x = -6, xend = -6, y = 25, yend = 17), family = "Roboto", fontface = "bold") +
geomtextpath::geom_textsegment(mapping = aes(label = "Other", x = -6, xend = -6, y = 36, yend = 27), family = "Roboto", fontface = "bold") +
scale_x_discrete(breaks = as.character(unique(df_plot$year)),
expand = expansion(mult = c(1.5, 0.1), add = c(1, 1))) +
scale_y_reverse(breaks = seq(0, 36, by = 1), limits = c(37.2, -2), expand = c(0, 0))
ggplot(data = df_plot, mapping = aes(x = as.character(year), y = y_pos, fill = group)) +
geom_tile(color = "white", width = 0.9, height = 0.9) +
geom_point(inherit.aes = FALSE,
data = df_plot %>% filter(Team == host),
mapping = aes(x = as.character(year), y = y_pos),
shape = 21, fill = "white", color = "grey20", size = 3) +
annotate(geom = "text", x = "2006", y = -0.5, label = "Hosted", family = "Roboto", size = 2.75) +
geom_segment(mapping = aes(x = "2006", xend = "2006", y = -0.1, yend = 0.85),
linewidth = 0.1, arrow = arrow(length = unit(0.05, "in"))) +
geom_text(mapping = aes(label = Team, y = y_pos, x = -5), size = 3, hjust = 0, color = "#909090", family = "Roboto") +
geomtextpath::geom_textsegment(mapping = aes(label = "Europe", x = -6, xend = -6, y = 15, yend = 1), family = "Roboto", fontface = "bold") +
geomtextpath::geom_textsegment(mapping = aes(label = "Americas", x = -6, xend = -6, y = 25, yend = 17), family = "Roboto", fontface = "bold") +
geomtextpath::geom_textsegment(mapping = aes(label = "Other", x = -6, xend = -6, y = 36, yend = 27), family = "Roboto", fontface = "bold") +
scale_x_discrete(breaks = as.character(unique(df_plot$year)),
expand = expansion(mult = c(1.5, 0.1), add = c(1, 1))) +
scale_y_reverse(breaks = seq(0, 36, by = 1), limits = c(37.2, -2), expand = c(0, 0)) +
scale_fill_manual(values = c("grey90", pal),
guide = guide_legend(ncol = 1, override.aes = list(width = 0.6, height = 0.6))) +
coord_equal() +
labs(x = "", y = "", fill = "Top Achievement") +
theme_void() +
theme(text = element_text(family = "Roboto"),
plot.title = element_text(face = "bold"),
legend.position = "none",
legend.title = element_text(size = 8),
legend.text = element_text(size = 6),
axis.text.y = element_blank(),
axis.text.x = element_text(size = 8, angle = 90, family = "Roboto"),
axis.ticks = element_blank(),
panel.background = element_blank())
title <- paste0(
"<span style='font-family:Cocon;font-size:28pt;'>**FIFA WORLD CUP**</span><br><br>",
"<span style='font-face:CA;font-size:11pt;color:#545454;'>", fifa_text, "</span><br><br>",
"<span style='font-face:Roboto;font-size:11pt;color:#545454;'>", fifa_text2, "</span><br><br>",
"<span style='font-face:Roboto;font-size:11pt;color:#545454;'>", fifa_text3, "</span>"
)
fifa_text<- "The FIFA World Cup, started in 1930, is an international football competition that takes place every four years. The analysis looks at the span of FIFA competitions between 1978 and 2018, tracking teams that participated in a minimum of 4 tournaments."
fifa_text2<-"It is important to note that the format of the competition and number of teams admitted has changed over time. In 1982, a total of 24 teams participated, and in subsequent tournaments, FIFA expanded the tournament to admit 32 teams. The Round of 16 was not introduced until 1986 - to standardize comparison, teams that achieved a ranking of at least 16 in competitions before 1986 were grouped as Round of 16. "
fifa_text3<-"Graphic groups teams by geographic location. The other grouping combines teams from Asia, Africa, and Australia. Between 1950 and 1990, Germany competed as two entities, West Germany and East Germany (result of the 1945 division). East Germany participated once in 1974. To standardize analysis, West Germany is relabeled as Germany for both 1982 and 1990 tournaments."
title <- paste0(
"<span style='font-family:Cocon;font-size:28pt;'>**FIFA WORLD CUP**</span><br><br>",
"<span style='font-face:CA;font-size:11pt;color:#545454;'>", fifa_text, "</span><br><br>",
"<span style='font-face:Roboto;font-size:11pt;color:#545454;'>", fifa_text2, "</span><br><br>",
"<span style='font-face:Roboto;font-size:11pt;color:#545454;'>", fifa_text3, "</span>"
)
caption <- paste0(
"<span style='font-family:Roboto;padding-right:10px;'>Source: Wikipedia</span>",
"<span style='color:#ffffff;'>.....</span>",
"<span style='font-family:fb;'>&#xf099;</span>",
"<span style='font-family:Roboto;'>@tanya_shapiro</span>",
"<span style='color:#ffffff;'>...</span>",
"<span style='font-family:fb;'>&#xf09b;</span>",
"<span style='font-family:Roboto;'> tashapiro </span>"
)
ggplot() +
# Add title using ggtext::geom_textbox
geom_textbox(mapping = aes(x = 3.3, y = 4.5, label = title),
hjust = 0, vjust = 1, box.size = NA, fill = NA, width = unit(4, "inch"))
ggplot() +
# Add title using ggtext::geom_textbox
geom_textbox(mapping = aes(x = 3.3, y = 4.5, label = title),
hjust = 0, vjust = 1, box.size = NA, fill = NA, width = unit(4, "inch")) +
# Add caption using ggtext::geom_textbox
geom_textbox(mapping = aes(x = 3.3, y = 1.25, label = caption),
size = 3, color = "#6E6E6E", hjust = 0, vjust = 1, box.size = NA, fill = NA, width = unit(3.5, "inch"))
ggplot() +
# Add title using ggtext::geom_textbox
geom_textbox(mapping = aes(x = 3.3, y = 4.5, label = title),
hjust = 0, vjust = 1, box.size = NA, fill = NA, width = unit(4, "inch")) +
# Add caption using ggtext::geom_textbox
geom_textbox(mapping = aes(x = 3.3, y = 1.25, label = caption),
size = 3, color = "#6E6E6E", hjust = 0, vjust = 1, box.size = NA, fill = NA, width = unit(3.5, "inch")) +
# Add custom legend title
geom_text(mapping = aes(x = 3.35, y = 2.25, label = "Best Achievement"),
hjust = 0, family = "Roboto", fontface = "bold")
caption <- paste0(
"<span style='font-family:Roboto;padding-right:10px;'>Source: Wikipedia</span>",
"<span style='color:#ffffff;'>.....</span>",
"<span style='font-family:fb;'>&#xf099;</span>",
"<span style='font-family:Roboto;'>@tanya_shapiro</span>",
"<span style='color:#ffffff;'>...</span>",
"<span style='font-family:fb;'>&#xf09b;</span>",
"<span style='font-family:Roboto;'> tashapiro </span>"
)
#create df for custom legend (positions relative to new plot creating in next step)
df_legend<-data.frame(x= rep(seq(3.38, 5, by=.6),2),
y= c(rep(2.1, 3),rep(1.95,3)),
label=c("Not Present","Group Stage", "Round of 16","Quarter Finals","Semi Finals","Winner"),
color = c("grey90",pal))
View(df_legend)
ggplot() +
# Add title using ggtext::geom_textbox
geom_textbox(mapping = aes(x = 3.3, y = 4.5, label = title),
hjust = 0, vjust = 1, box.size = NA, fill = NA, width = unit(4, "inch")) +
# Add caption using ggtext::geom_textbox
geom_textbox(mapping = aes(x = 3.3, y = 1.25, label = caption),
size = 3, color = "#6E6E6E", hjust = 0, vjust = 1, box.size = NA, fill = NA, width = unit(3.5, "inch")) +
# Add custom legend title
geom_text(mapping = aes(x = 3.35, y = 2.25, label = "Best Achievement"),
hjust = 0, family = "Roboto", fontface = "bold") +
# Add custom legend items
geom_text(data = df_legend, mapping = aes(x = x + 0.08, y = y, label = label), hjust = 0, family = "Roboto", size = 3.5) +
geom_point(data = df_legend, mapping = aes(x = x, y = y, color = I(color)), shape = 15, size = 6)
#solution from: https://stackoverflow.com/questions/60820565/is-there-a-way-to-add-an-alpha-value-within-geom-image-in-ggplot
transparent <- function(img) {
magick::image_fx(img, expression = "0.1*a", channel = "alpha")
}
#Final Plot (note: positioning of layers was very experimental, hindsight would set scales from 0 to n)
ggplot()+
#add in tile heatmap
annotation_custom(ggplotGrob(plot), xmin=3, xmax=8.5, ymin=1.25, ymax=4.75)+
#add ball image
geom_image(mapping=aes(x=3.3, y=4.5, image="https://raw.githubusercontent.com/tashapiro/tanya-data-viz/main/fifa-world-cup/ball.png"), image_fun = transparent, size=.4)+
#add plot title
geom_textbox(mapping=aes(x=3.3, y=4.5, label=title), hjust=0, vjust=1, box.size=NA, fill=NA,  width = unit(4, "inch"))+
#add caption
geom_textbox(mapping=aes(x=3.3, y=1.25, label=caption), size=3, color="#6E6E6E", hjust=0, vjust=1, box.size=NA, fill=NA,  width = unit(3.5, "inch"))+
#add custom legend
geom_text(mapping=aes(x=3.35, y=2.25, label="Best Achievement"), hjust=0, family="Roboto", fontface="bold")+
geom_text(data=df_legend, mapping=aes(x=x+.08, y=y, label=label), hjust=0, family="Roboto", size=3.5)+
geom_point(data=df_legend, mapping=aes(x=x, y=y, color=I(color)), shape=15, size=6)+
scale_x_continuous(limits=c(3,7), expand=c(0,0))+
scale_y_continuous(limits=c(1,5), expand=c(0,0))+
coord_equal()+
theme_void()
#Final Plot (note: positioning of layers was very experimental, hindsight would set scales from 0 to n)
ggplot()+
#add in tile heatmap
annotation_custom(ggplotGrob(plot), xmin=3, xmax=8.5, ymin=1.25, ymax=4.75)+
#add ball image
geom_image(mapping=aes(x=3.3, y=4.5, image="./asset/ball.png"), image_fun = transparent, size=.4)+
#add plot title
geom_textbox(mapping=aes(x=3.3, y=4.5, label=title), hjust=0, vjust=1, box.size=NA, fill=NA,  width = unit(4, "inch"))+
#add caption
geom_textbox(mapping=aes(x=3.3, y=1.25, label=caption), size=3, color="#6E6E6E", hjust=0, vjust=1, box.size=NA, fill=NA,  width = unit(3.5, "inch"))+
#add custom legend
geom_text(mapping=aes(x=3.35, y=2.25, label="Best Achievement"), hjust=0, family="Roboto", fontface="bold")+
geom_text(data=df_legend, mapping=aes(x=x+.08, y=y, label=label), hjust=0, family="Roboto", size=3.5)+
geom_point(data=df_legend, mapping=aes(x=x, y=y, color=I(color)), shape=15, size=6)+
scale_x_continuous(limits=c(3,7), expand=c(0,0))+
scale_y_continuous(limits=c(1,5), expand=c(0,0))+
coord_equal()+
theme_void()
#Final Plot (note: positioning of layers was very experimental, hindsight would set scales from 0 to n)
ggplot()+
#add in tile heatmap
annotation_custom(ggplotGrob(plot), xmin=3, xmax=8.5, ymin=1.25, ymax=4.75)+
#add ball image
geom_image(mapping=aes(x=3.3, y=4.5, image="./assets/ball.png"), image_fun = transparent, size=.4)+
#add plot title
geom_textbox(mapping=aes(x=3.3, y=4.5, label=title), hjust=0, vjust=1, box.size=NA, fill=NA,  width = unit(4, "inch"))+
#add caption
geom_textbox(mapping=aes(x=3.3, y=1.25, label=caption), size=3, color="#6E6E6E", hjust=0, vjust=1, box.size=NA, fill=NA,  width = unit(3.5, "inch"))+
#add custom legend
geom_text(mapping=aes(x=3.35, y=2.25, label="Best Achievement"), hjust=0, family="Roboto", fontface="bold")+
geom_text(data=df_legend, mapping=aes(x=x+.08, y=y, label=label), hjust=0, family="Roboto", size=3.5)+
geom_point(data=df_legend, mapping=aes(x=x, y=y, color=I(color)), shape=15, size=6)+
scale_x_continuous(limits=c(3,7), expand=c(0,0))+
scale_y_continuous(limits=c(1,5), expand=c(0,0))+
coord_equal()+
theme_void()
#save
ggsave("fifa.png", bg="white" , height=9, width=9, units="in")
#save
ggsave("fifa_draft.png", bg="white" , height=9, width=9, units="in")
renv::init()
library(tidyverse)
library(RColorBrewer)
library(viridis)
library(sysfonts)
library(showtext)
library(geomtextpath)
library(ggimage)
library(ggtext)
library(rvest)
library(DT)
sysfonts::font_add_google("Roboto", "Roboto")
sysfonts::font_add("Cocon", "./fonts/CoconRegularFont.otf")
sysfonts::font_add("fb", "fonts/Font Awesome 6 Brands-Regular-400.otf")
showtext_auto()
showtext::showtext_opts(dpi = 300)
ref = data.frame(
year = c(1982, 1986, 1990, 1994, 1998, 2002, 2006, 2010, 2014),
index = c(16, 14, 15, 13, 25, 24, 23, 14, 20),
host = c("Spain", "Mexico", "Italy", "United States", "France",
"South Korea", "Germany", "South Africa", "Brazil")
)
# Generate links to all Wikipedia pages for these years
ref$link = paste0("https://en.wikipedia.org/wiki/", ref$year, "_FIFA_World_Cup")
# Visualize the reference table
datatable(ref, filter = "top")
# Step 1: Get the URL and table index for the year 1982
url = ref$link[ref$year == 1982]
index = ref$index[ref$year == 1982]
# Step 2: Scrape the table from the Wikipedia page
data_1982 = url %>%
read_html() %>%                    # Read the HTML content of the page
html_elements("table.wikitable") %>%  # Select all tables with the 'wikitable' class
.[index] %>%                       # Pick the table based on the given index
html_table() %>%                   # Convert the table to a dataframe
.[[1]]                             # Extract the first element of the list
# Step 3: Clean and format the table
data_1982 = data_1982 %>%
rename(Pos = 1) %>%                # Rename the first column to 'Pos' (Position)
select(Pos, Team, L, W)            # Keep only Position, Team, Losses, and Wins columns
# Visualization the 1982 data table
datatable(data_1982, filter = "top")
get_table <- function(year) {
# Step 1: Get the URL and table index for the year
url = ref$link[ref$year == year]
index = ref$index[ref$year == year]
# Step 2: Scrape the table from the Wikipedia page
data = url %>%
read_html() %>%                    # Read the HTML content of the page
html_elements("table.wikitable") %>%  # Select all tables with the 'wikitable' class
.[index] %>%                       # Pick the table based on the given index
html_table() %>%                   # Convert the table to a dataframe
.[[1]]                             # Extract the first element of the list
# Step 3: Clean and format the table
data = data %>%
rename(Pos = 1) %>%                # Rename the first column to 'Pos' (Position)
select(Pos, Team, L, W)            # Keep only Position, Team, Losses, and Wins columns
# Step 4: Add the year column
data$year = year
return(data)
}
# Initialize an empty dataframe
data = data.frame()
# Loop through each year and scrape the corresponding data
for (i in ref$year) {
data = rbind(data, get_table(i))
}
# Visualize data table
datatable(data, filter = "top")
data <- data %>%
mutate(Team = case_when(Team == "West Germany" ~ "Germany", TRUE ~ Team))
teams <- data %>%
group_by(Team) %>%
summarise(wc = n()) %>%
filter(wc > 3)
# Visualize teams
datatable(teams, filter = "top")
geo_group <- data.frame(
country = c("Italy","Germany","England","Norway","Sweden","Switzerland","Netherlands","France","Belgium",
"Spain","Croatia","Poland","Portugal","Denmark","Russia","Scotland",
"United States","Argentina","Brazil","Paraguay","Uruguay","Costa Rica","Colombia","Chile","Mexico",
"Nigeria","Cameroon","Saudi Arabia","South Korea","Japan","Iran","Morocco","Algeria"
),
geo = c(rep("Europe",16), rep("Americas",9), rep("Other",8))
)
#Create Factor for Continent to arrange in order
geo_group$geo<-factor(geo_group$geo, levels=c("Europe","Americas","Other"))
# Visualize geo grouping table
datatable(geo_group, filter = "top")
df_plot <- data %>%
filter(!grepl("Eliminated", Pos) & Team %in% teams$Team) %>%
left_join(teams, by = "Team") %>%
left_join(geo_group, by = c("Team" = "country")) %>%
left_join(ref, by = "year") %>%
group_by(year) %>%
complete(Team = teams$Team) %>%
filter(!grepl("Eliminated", Team)) %>%
mutate(counter = 1,
Pos = as.integer(Pos),
group = case_when(
is.na(Pos) ~ "Not Present",
Pos == 1 ~ "Win",
Pos <= 4 ~ "Semi Finals",
Pos <= 8 ~ "Quarter Finals",
Pos <= 16 ~ "Round of 16",
Pos <= 32 ~ "Group Stage"
)) %>%
ungroup() %>%
group_by(Team) %>%
arrange(Team, year) %>%
mutate(wc = sum(counter[group != "Not Present"]),
win = sum(counter[group == "Win"])) %>%
arrange(geo, -wc, -win, Team) %>%
ungroup()
# Visualize
datatable(df_plot, filter = "top")
# filter(!grepl("Eliminated", Pos) & Team %in% teams$Team)
# left_join(teams, by = "Team") %>%
# left_join(geo_group, by = c("Team" = "country")) %>%
# left_join(ref, by = "year")
# group_by(year) %>% complete(Team = teams$Team)
# filter(!grepl("Eliminated", Team))
# mutate(counter = 1,
#Pos = as.integer(Pos),
#group = case_when(
#is.na(Pos) ~ "Not Present",
#Pos == 1 ~ "Win",
#Pos <= 4 ~ "Semi Finals",
#Pos <= 8 ~ "Quarter Finals",
#Pos <= 16 ~ "Round of 16",
#Pos <= 32 ~ "Group Stage"
#))
# group_by(Team) %>%
# arrange(Team, year) %>%
# mutate(wc = sum(counter[group != "Not Present"]),
# win = sum(counter[group == "Win"]))
# arrange(geo, -wc, -win, Team)
# ungroup()
df_pos <- df_plot |>
distinct(Team) |>
mutate(y_pos = row_number())
datatable(df_pos, filter = "top")
df_plot <- df_plot |>
left_join(df_pos, by = "Team")
datatable(df_plot, filter = "top")
df_plot$y_pos <- ifelse(df_plot$y_pos < 16, df_plot$y_pos, df_plot$y_pos + 1)
df_plot$y_pos <- ifelse(df_plot$y_pos < 26, df_plot$y_pos, df_plot$y_pos + 1)
df_plot$group <- factor(df_plot$group,
levels = c("Not Present", "Group Stage", "Round of 16", "Quarter Finals", "Semi Finals", "Win"))
pal <- viridis(n = 5, option = "viridis")[1:5]
df_plot$host[df_plot$Team == "Japan" & df_plot$year == 2002] <- "Japan"
plot <- ggplot(data = df_plot, mapping = aes(x = as.character(year), y = y_pos, fill = group)) +
geom_tile(color = "white", width = 0.9, height = 0.9) +
geom_point(inherit.aes = FALSE,
data = df_plot %>% filter(Team == host),
mapping = aes(x = as.character(year), y = y_pos),
shape = 21, fill = "white", color = "grey20", size = 3) +
annotate(geom = "text", x = "2006", y = -0.5, label = "Hosted", family = "Roboto", size = 2.75) +
geom_segment(mapping = aes(x = "2006", xend = "2006", y = -0.1, yend = 0.85),
linewidth = 0.1, arrow = arrow(length = unit(0.05, "in"))) +
geom_text(mapping = aes(label = Team, y = y_pos, x = -5), size = 3, hjust = 0, color = "#909090", family = "Roboto") +
geomtextpath::geom_textsegment(mapping = aes(label = "Europe", x = -6, xend = -6, y = 15, yend = 1), family = "Roboto", fontface = "bold") +
geomtextpath::geom_textsegment(mapping = aes(label = "Americas", x = -6, xend = -6, y = 25, yend = 17), family = "Roboto", fontface = "bold") +
geomtextpath::geom_textsegment(mapping = aes(label = "Other", x = -6, xend = -6, y = 36, yend = 27), family = "Roboto", fontface = "bold") +
scale_x_discrete(breaks = as.character(unique(df_plot$year)),
expand = expansion(mult = c(1.5, 0.1), add = c(1, 1))) +
scale_y_reverse(breaks = seq(0, 36, by = 1), limits = c(37.2, -2), expand = c(0, 0)) +
scale_fill_manual(values = c("grey90", pal),
guide = guide_legend(ncol = 1, override.aes = list(width = 0.6, height = 0.6))) +
coord_equal() +
labs(x = "", y = "", fill = "Top Achievement") +
theme_void() +
theme(text = element_text(family = "Roboto"),
plot.title = element_text(face = "bold"),
legend.position = "none",
legend.title = element_text(size = 8),
legend.text = element_text(size = 6),
axis.text.y = element_blank(),
axis.text.x = element_text(size = 8, angle = 90, family = "Roboto"),
axis.ticks = element_blank(),
panel.background = element_blank())
plot
# ggplot(data = df_plot, mapping = aes(x = as.character(year), y = y_pos, fill = group))
# geom_tile(color = "white", width = 0.9, height = 0.9)
# geom_point(inherit.aes = FALSE,
# data = df_plot %>% filter(Team == host),
# mapping = aes(x = as.character(year), y = y_pos),
# shape = 21, fill = "white", color = "grey20", size = 3)
# annotate(geom = "text", x = "2006", y = -0.5, label = "Hosted", family = "Roboto", size = 2.75)
# geom_segment(mapping = aes(x = "2006", xend = "2006", y = -0.1, yend = 0.85),
#linewidth = 0.1, arrow = arrow(length = unit(0.05, "in")))
# geom_text(mapping = aes(label = Team, y = y_pos, x = -5), size = 3, hjust = 0, color = "#909090", family = "Roboto")
# geomtextpath::geom_textsegment(mapping = aes(label = "Europe", x = -6, xend = -6, y = 15, yend = 1), family = "Roboto", fontface = "bold")
# scale_x_discrete(breaks = as.character(unique(df_plot$year)), expand = expansion(mult = c(1.5, 0.1), add = c(1, 1)))
# scale_y_reverse(breaks = seq(0, 36, by = 1), limits = c(37.2, -2), expand = c(0, 0))
# scale_fill_manual(values = c("grey90", pal), guide = guide_legend(ncol = 1, override.aes = list(width = 0.6, height = 0.6)))
# theme_void() +
# theme(text = element_text(family = "Roboto"),
# plot.title = element_text(face = "bold"),
# legend.position = "none",
# axis.text.x = element_text(size = 8, angle = 90, family = "Roboto"),
# axis.text.y = element_blank(),
# axis.ticks = element_blank(),
# panel.background = element_blank())
#create title text - used with ggtext::geom_textbox
fifa_text<- "The FIFA World Cup, started in 1930, is an international football competition that takes place every four years. The analysis looks at the span of FIFA competitions between 1978 and 2018, tracking teams that participated in a minimum of 4 tournaments."
fifa_text2<-"It is important to note that the format of the competition and number of teams admitted has changed over time. In 1982, a total of 24 teams participated, and in subsequent tournaments, FIFA expanded the tournament to admit 32 teams. The Round of 16 was not introduced until 1986 - to standardize comparison, teams that achieved a ranking of at least 16 in competitions before 1986 were grouped as Round of 16. "
fifa_text3<-"Graphic groups teams by geographic location. The other grouping combines teams from Asia, Africa, and Australia. Between 1950 and 1990, Germany competed as two entities, West Germany and East Germany (result of the 1945 division). East Germany participated once in 1974. To standardize analysis, West Germany is relabeled as Germany for both 1982 and 1990 tournaments."
#create df for custom legend (positions relative to new plot creating in next step)
df_legend<-data.frame(x= rep(seq(3.38, 5, by=.6),2),
y= c(rep(2.1, 3),rep(1.95,3)),
label=c("Not Present","Group Stage", "Round of 16","Quarter Finals","Semi Finals","Winner"),
color = c("grey90",pal))
#Adding alpha function to geom_image
#solution from: https://stackoverflow.com/questions/60820565/is-there-a-way-to-add-an-alpha-value-within-geom-image-in-ggplot
transparent <- function(img) {
magick::image_fx(img, expression = "0.1*a", channel = "alpha")
}
title <- paste0(
"<span style='font-family:Cocon;font-size:28pt;'>**FIFA WORLD CUP**</span><br><br>",
"<span style='font-face:CA;font-size:11pt;color:#545454;'>", fifa_text, "</span><br><br>",
"<span style='font-face:Roboto;font-size:11pt;color:#545454;'>", fifa_text2, "</span><br><br>",
"<span style='font-face:Roboto;font-size:11pt;color:#545454;'>", fifa_text3, "</span>"
)
caption <- paste0(
"<span style='font-family:Roboto;padding-right:10px;'>Source: Wikipedia</span>",
"<span style='color:#ffffff;'>.....</span>",
"<span style='font-family:fb;'>&#xf099;</span>",
"<span style='font-family:Roboto;'>@tanya_shapiro</span>",
"<span style='color:#ffffff;'>...</span>",
"<span style='font-family:fb;'>&#xf09b;</span>",
"<span style='font-family:Roboto;'> tashapiro </span>"
)
#Final Plot (note: positioning of layers was very experimental, hindsight would set scales from 0 to n)
ggplot()+
#add in tile heatmap
annotation_custom(ggplotGrob(plot), xmin=3, xmax=8.5, ymin=1.25, ymax=4.75)+
#add ball image
geom_image(mapping=aes(x=3.3, y=4.5, image="./assets/ball.png"), image_fun = transparent, size=.4)+
#add plot title
geom_textbox(mapping=aes(x=3.3, y=4.5, label=title), hjust=0, vjust=1, box.size=NA, fill=NA,  width = unit(4, "inch"))+
#add caption
geom_textbox(mapping=aes(x=3.3, y=1.25, label=caption), size=3, color="#6E6E6E", hjust=0, vjust=1, box.size=NA, fill=NA,  width = unit(3.5, "inch"))+
#add custom legend
geom_text(mapping=aes(x=3.35, y=2.25, label="Best Achievement"), hjust=0, family="Roboto", fontface="bold")+
geom_text(data=df_legend, mapping=aes(x=x+.08, y=y, label=label), hjust=0, family="Roboto", size=3.5)+
geom_point(data=df_legend, mapping=aes(x=x, y=y, color=I(color)), shape=15, size=6)+
scale_x_continuous(limits=c(3,7), expand=c(0,0))+
scale_y_continuous(limits=c(1,5), expand=c(0,0))+
coord_equal()+
theme_void()
#save
# ggsave("fifa_draft.png", bg="white" , height=9, width=9, units="in")
